version: "3.3"

services:
  zookeeper:
    image: bitnami/zookeeper:3.7.0
    ports:
      - 2181:2181
      - 2888
      - 3888
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOO_SERVER_ID: 1001
      ZOO_SERVERS: 0.0.0.0:2888:3888
    # volumes:
    #   - ./.volumesdata/zookeeper:/bitnami/zookeeper
    #   - ./.volumesdata/zookeeper/config:/bitnami/zookeeper/config
    #   - ./.volumesdata/zookeeper/data:/bitnami/zookeeper/data
  
  kafka:
    image: bitnami/kafka:2.8.0
    hostname: kafka
    ports:
      - 9093:9093
    expose:
      - 9093
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="kafka_capstone_event_bus:1:1"
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
    # volumes:
    #   - ./volumesdata/kafka:/bitnami/kafka
    #   - ./volumesdata/kafka/config:/bitnami/kafka/config
    #   - ./volumesdata/kafka/data:/bitnami/kafka/data
    depends_on:
      - zookeeper
    

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
     - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
  
  db:
    image: mysql:8.0.31
    hostname: db
    restart: always
    ports:
      - 3306:3306
      - 33060:33060
    environment:
      MYSQL_ROOT_PASSWORD: alvyn
      MYSQL_DATABASE: transaction_db
    volumes:
      - .volumesdata/db:/var/lib/mysql:rw

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 5000:5000
    environment:
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: alvyn
      MYSQL_DATABASE: transaction_db
      DATABASE_URL: db
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
    volumes:
      - ./app:/app
    depends_on:
      - kafka
      - db

  # auth_app:
  #   build:
  #     context: ./auth
  #     dockerfile: Dockerfile
  #   restart: on-failure
  #   ports:
  #     - 5000:5000
  #   environment:
  #     POSTGRES_USERNAME: root
  #     POSTGRES_PASSWORD: alvyn
  #     POSTGRES_DATABASE: users_db
  #     DATABASE_URL: auth_db
  #   volumes:
  #     - ./app:/app
  #   depends_on:
  #     - auth_db

  # auth_db:
  #   image: postgres:15.1
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_USERNAME: root
  #     POSTGRES_PASSWORD: alvyn
  #     POSTGRES_DATABASE: users_db
